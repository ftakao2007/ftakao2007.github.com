<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: OS | Octopress Blog]]></title>
  <link href="http://ftakao2007.github.com/blog/categories/os/atom.xml" rel="self"/>
  <link href="http://ftakao2007.github.com/"/>
  <updated>2013-04-11T00:25:07+09:00</updated>
  <id>http://ftakao2007.github.com/</id>
  <author>
    <name><![CDATA[ftakao2007]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Macの環境構築]]></title>
    <link href="http://ftakao2007.github.com/blog/2013/04/07/mac/"/>
    <updated>2013-04-07T20:04:00+09:00</updated>
    <id>http://ftakao2007.github.com/blog/2013/04/07/mac</id>
    <content type="html"><![CDATA[<h1>herokuのインストール</h1>

<p><a href="http://d.hatena.ne.jp/nshibazaki/20110723/1311494665">Macでherokuの開発環境を作る</a></p>

<p>Xcodeは昔インストールしていた。<br/>
rvmのインストールがうまく動かなかったので<a href="http://ftakao2007.github.io/blog/2013/04/07/ec2/">Octopressの環境を構築</a>を利用。<br/>
homebrewとgitもインストール済み<br/>
herokuは<code>gem install heroku</code>でインストールできた。</p>

<p>後は鍵の設定をして表示されている通りコマンドを打てばハロワがでました。</p>

<h1>fabricのインストール</h1>

<p>pipをインストールしてからfabricを入れる</p>

<p><code>bash
sudo su -
easy_install pip
pip install fabric
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ec2]]></title>
    <link href="http://ftakao2007.github.com/blog/2013/04/07/ec2/"/>
    <updated>2013-04-07T10:36:00+09:00</updated>
    <id>http://ftakao2007.github.com/blog/2013/04/07/ec2</id>
    <content type="html"><![CDATA[<p>ec2関連のまとめ</p>

<h1>EC2にDropboxをインストールしてOctopressの記事を共有する</h1>

<p>※※※ Dropbox上のファイルが消失する可能性のある作業が含まれますので以下作業をする場合は自己責任でお願いしますm(<em> </em>)m</p>

<h2>概要</h2>

<p>Octopressの記事はローカルに保存して編集するので、通常その環境でしか作業できない。
DropboxにOctopressの記事を置くことで、様々な環境で記事を編集できるようにする。</p>

<h2><a href="http://d.hatena.ne.jp/tester7/20120303/1330768342">CUI環境の Linux に Dropbox をインストール</a></h2>

<p>基本的にこの手順にそって作業すればOK<br/>
(今回の環境はAmazonLinux 64bit)</p>

<h2>ポイントなど</h2>

<ul>
<li><p>DLと展開が一度にできなかったので分けて実施
<code>bash
wget http://www.dropbox.com/download?plat=lnx.x86_64
tar zxvf dropbox-lnx.x86_64-2.0.5.tar.gz
</code></p></li>
<li><p>同期の状態はfilestatusとstatusで確認
``` bash
[root@ip-10-156-85-183 Dropbox]# dropbox filestatus
Photos:          syncing
private:         syncing
Public:          up to date
カメラアップロード:       up to date</p></li>
</ul>


<p>[root@ip-10-156-85-183 ~]# dropbox status
更新中（4,174 件のファイル, 残り 1 時間）
4,174 件のファイルをダウンロード中 （162.8 kB/秒、残り 1 時間
```</p>

<ul>
<li>同期対象から除外と確認
``` bash
[root@ip-10-156-85-183 ~]# dropbox exclude add ~/Dropbox/カメラアップロード
Excluded:
Dropbox/カメラアップロード</li>
</ul>


<p>[root@ip-10-156-85-183 ~]# dropbox exclude list
Excluded:
Dropbox/カメラアップロード
```</p>

<h2>気をつけたほうが良いこと</h2>

<p>Dropboxを起動すると即同期がはじまります。デフォルトではDropboxのすべてのファイル
同期が始まるのですが、ここで焦ってファイルを削除すると必要なDropbox上の大元のファイルを削除してしまう可能性があります。
rmなどで直接削除せず、exclude addを実行してください(コマンド実行後、反映されるまで1分くらいかかることがあります)。
実行が完了すると対象ファイルは見えなくなります。</p>

<p>あと、普段は停止して必要な時のみ同期させてリソースを節約したほうがよいかもです。</p>

<h1>Octopressの環境を構築</h1>

<h3>初期設定</h3>

<ul>
<li><a href="http://k-ui.jp/blog/2011/08/30/try-to-octopress/">Octopress 使う</a></li>
<li><a href="http://atijust.github.io/">GitHub+Octopressでブログ構築</a></li>
</ul>


<h4>rvmとruby1.9.3のインストール</h4>

<p><code>bash
bash -s stable &lt; &lt;(curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer)
source ~/.bash_profile
rvm autolibs enable
rvm install ruby-1.9.3-p392 &amp;&amp; rvm use ruby-1.9.3-p392
rvm rubygems latest
</code></p>

<p>※ 参考のページはruby-1.9.2-p320で、現在はoctpressフォルダに移動したときに<code>ruby-1.9.3-p392 is not installed.</code>のメッセージが出てしまう。<br/>
※ <code>rvm rubygems latest</code>は実行しなくてもよいかも。(直前のコマンドで実行されている?)<br/>
※ CentOS6.4は<a href="http://d.hatena.ne.jp/watanabe162/20120424/1335273582">libyaml-develをインストール</a>しないとエラーになる。<br/>
デフォルトのリポジトリには入っていないので、EPELリポジトリを追加する必要がある。<br/>
※ CentOS6.4はsudoが実行できる設定も行う必要がある。</p>

<h4>必要なパッケージのインストール</h4>

<p><code>bash
gem install bundler rake
bundle install
rake install  
</code>
※ DropBox内に既存の設定がある場合は<code>rake install</code>は実行不要</p>

<h4>githubの設定</h4>

<p><code>bash
rake setup_github_pages
</code></p>

<p><code>bash
git config --global user.name "Your Name"
git config --global user.email you@example.com
git commit --amend --reset-author
</code>
※  この辺はエラーメッセージに実行してくださいと出たので設定しました。最後の行は実行しなくてもよいかもです。</p>

<h4>githubのアクセス設定</h4>

<p>接続しようとすると<code>fatal: The remote end hung up unexpectedly</code>のエラーがでるのでsshの権限を設定する</p>

<p><a href="http://d.hatena.ne.jp/tmd45/20110203/1296744114">githubにパスワードなしでssh接続する設定</a> で鍵を事前に作っていた。これ(id_rsa)を<code>~/.ssh</code>に移動。600への権限変更も忘れずに。<br/>
※ 既存の鍵を上書きしないように注意。</p>

<p>これでgithubに上げられるようになる。<br/>
<a href="http://ftakao2007.github.io/blog/2013/04/06/octpress/">Octopress まとめ</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS]]></title>
    <link href="http://ftakao2007.github.com/blog/2013/04/06/centos/"/>
    <updated>2013-04-06T21:20:00+09:00</updated>
    <id>http://ftakao2007.github.com/blog/2013/04/06/centos</id>
    <content type="html"><![CDATA[<h1>CentOS6.4まとめ</h1>

<p>MacのVmware上で動いているCentOS設定のまとめ</p>

<h2>解像度の設定</h2>

<p>システム → 設定 → ディスプレイ<br/>
1366 * 768</p>

<h2>キーボードの設定</h2>

<h3>レイアウト設定</h3>

<p>システム → 設定 →  キーボード
MacBook/MacBook Pro (Intl)</p>

<ul>
<li>レイアウト<br/>
「日本語」を追加して再ログイン<br/>
→ ログインしなおすと設定が反映される</li>
</ul>


<h3>日本語入力のショートカット(Anthy)</h3>

<p><code>Ctrl + j</code> で日本語入力と英語入力の切り替え可能</p>

<h2><a href="http://centossrv.com/ntp.shtml">ntp設定</a></h2>

<h2><a href="http://ftakao2007.github.io/blog//2013/04/06/fabric/">fabric インストール</a></h2>
]]></content>
  </entry>
  
</feed>
