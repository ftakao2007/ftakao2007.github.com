<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: command | Octopress Blog]]></title>
  <link href="http://ftakao2007.github.com/blog/categories/command/atom.xml" rel="self"/>
  <link href="http://ftakao2007.github.com/"/>
  <updated>2013-04-14T10:18:52+09:00</updated>
  <id>http://ftakao2007.github.com/</id>
  <author>
    <name><![CDATA[ftakao2007]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[逆引きコマンド]]></title>
    <link href="http://ftakao2007.github.com/blog/2013/04/14/sed-gyakubiki/"/>
    <updated>2013-04-14T00:20:00+09:00</updated>
    <id>http://ftakao2007.github.com/blog/2013/04/14/sed-gyakubiki</id>
    <content type="html"><![CDATA[<h2>改行を</h2>

<h3>したい</h3>

<p>「=」で改行
``` bash
fukui-no-MacBook-Air:tmp ftakao2007$ cat vimrc
set fileencoding=utf-8
set fileencodings=iso-2022-jp,utf-8,euc-jp</p>

<p>fukui-no-MacBook-Air:tmp ftakao2007$ cat vimrc | gsed -e 's/=/\n/g'
set fileencoding
utf-8
set fileencodings
iso-2022-jp,utf-8,euc-jp
```</p>

<h3>消したい</h3>

<p>``` bash
fukui-no-MacBook-Air:tmp ftakao2007$ cat vimrc
set fileencoding=utf-8
set fileencodings=iso-2022-jp,utf-8,euc-jp</p>

<p>fukui-no-MacBook-Air:tmp ftakao2007$ cat vimrc | tr -d '\n'
set fileencoding=utf-8set fileencodings=iso-2022-jp,utf-8,euc-jpfukui-no-MacBook-Air:tmp ftakao2007$
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sed]]></title>
    <link href="http://ftakao2007.github.com/blog/2013/04/13/sed/"/>
    <updated>2013-04-13T23:54:00+09:00</updated>
    <id>http://ftakao2007.github.com/blog/2013/04/13/sed</id>
    <content type="html"><![CDATA[<h1>sed (ストリーミングエディタ)</h1>

<h2>Option</h2>

<h3>n</h3>

<p>標準出力を制御
``` bash
fukui-no-MacBook-Air:sed ftakao2007$ cat test_sed.txt
aaa
bbb123
ccc</p>

<p>fukui-no-MacBook-Air:sed ftakao2007$ sed '/bbb/p' test_sed.txt
aaa
bbb123
bbb123
ccc</p>

<ul>
<li>bbbが含まれている行があればその行を出力するという処理。
 nオプション無しだと、「テキストの内容＋処理結果」となっている</li>
</ul>


<p>fukui-no-MacBook-Air:sed ftakao2007$ sed -n '/bbb/p' test_sed.txt
bbb123</p>

<ul>
<li>nオプションをつけると処理結果のみ出力</li>
</ul>


<p>fukui-no-MacBook-Air:sed ftakao2007$ sed -n '/bbb/d' test_sed.txt</p>

<ul>
<li>bbbが含まれる行を削除する処理。
 nオプションをつけている場合は処理結果は何も表示されず、よくわからない。</li>
</ul>


<p>fukui-no-MacBook-Air:sed ftakao2007$ sed '/bbb/d' test_sed.txt
aaa
ccc</p>

<ul>
<li><p>nオプション無しで実行すると、bbbの行が削除されている事が分かる。
```</p></li>
<li><p>pで表示する場合はnをつけると目的の部分だけ出力できる</p></li>
<li>dで削除する場合はnを付けなければ削除された行以外を出力できる</li>
</ul>


<!--
* sで置換する場合はnを付けなければ目的の語句が置換された状態で全ファイル分出力される  
➡d,sはnを付けると出力結果は何も表示されない
-->


<h3>e</h3>

<p>次にくる値はコマンドとみなす
``` bash
fukui-no-MacBook-Air:sed ftakao2007$ cat test_sed.txt
aaa
bbb123
ccc</p>

<p>fukui-no-MacBook-Air:sed ftakao2007$ sed '/bbb/d' test_sed.txt
aaa
ccc</p>

<p>fukui-no-MacBook-Air:sed ftakao2007$ sed -e '/bbb/d' -e '/ccc/d' test_sed.txt
aaa</p>

<ul>
<li>bbbが含まれる行を削除し、cccが含まれる行も削除する</li>
</ul>


<p>fukui-no-MacBook-Air:sed ftakao2007$ sed '/bbb/d' -e '/ccc/d' test_sed.txt
sed: -e: No such file or directory
sed: /ccc/d: No such file or directory
aaa
ccc</p>

<ul>
<li>eオプションを使う場合はコマンドごとに明示的にeオプションを指定する必要がある
```</li>
</ul>


<h3>f</h3>

<p>次にくる値はスクリプトとみなす
``` bash
fukui-no-MacBook-Air:sed ftakao2007$ cat test_sed.txt
aaa
bbb123
ccc</p>

<p>fukui-no-MacBook-Air:sed ftakao2007$ cat sed_test.sed
/bbb/p</p>

<p>fukui-no-MacBook-Air:sed ftakao2007$ sed -n -f sed_test.sed test_sed.txt
bbb123
```</p>

<h3>i</h3>

<p>標準出力に出力せず、直接ファイルを書き換える</p>

<p>``` bash
fukui-no-MacBook-Air:sed ftakao2007$ cat test_sed.txt
aaa
bbb123
ccc</p>

<p>fukui-no-MacBook-Air:sed ftakao2007$ sed -i.bak '/bbb/d' test_sed.txt</p>

<p>fukui-no-MacBook-Air:sed ftakao2007$ cat test_sed.txt
aaa
ccc</p>

<p>fukui-no-MacBook-Air:sed ftakao2007$ cat test_sed.txt.bak
aaa
bbb123
ccc</p>

<ul>
<li>.bakにバックアップをとって元ファイルはbbbを含む行が削除されている</li>
</ul>


<p>fukui-no-MacBook-Air:sed ftakao2007$ sed -i '/bbb/d' test_sed.txt
sed: 1: "test_sed2.txt": undefined label 'est_sed.txt'</p>

<ul>
<li>拡張子を指定しない場合はエラーになる
```</li>
</ul>


<h2>Command</h2>

<h3>p</h3>

<p>出力する</p>

<p>``` bash
fukui-no-MacBook-Air:sed ftakao2007$ cat test_sed.txt
aaa
bbb123
ccc</p>

<p>fukui-no-MacBook-Air:sed ftakao2007$ sed -n '1,2p' test_sed.txt
aaa
bbb123</p>

<ul>
<li>1-2行目を出力</li>
</ul>


<p>fukui-no-MacBook-Air:sed ftakao2007$ sed -n '3p' test_sed.txt
ccc</p>

<ul>
<li>3行目を出力</li>
</ul>


<p>fukui-no-MacBook-Air:sed ftakao2007$ sed -n '/bbb/p' test_sed.txt
bbb123</p>

<ul>
<li>bbbが含まれる行を出力</li>
</ul>


<p>fukui-no-MacBook-Air:sed ftakao2007$ sed -n '$p' test_sed.txt
ccc</p>

<ul>
<li>最後の行を出力
```</li>
</ul>


<h3>d</h3>

<p>削除する
``` bash
fukui-no-MacBook-Air:sed ftakao2007$ cat test_sed.txt
aaa
bbb123
ccc</p>

<p>fukui-no-MacBook-Air:sed ftakao2007$ sed '1,2d' test_sed.txt
ccc</p>

<ul>
<li>1-2行目を削除</li>
</ul>


<p>fukui-no-MacBook-Air:sed ftakao2007$ sed '3d' test_sed.txt
aaa
bbb123</p>

<ul>
<li>3行目を削除</li>
</ul>


<p>fukui-no-MacBook-Air:sed ftakao2007$ sed '/bbb/d' test_sed.txt
aaa
ccc</p>

<ul>
<li>bbbが含まれる行を削除</li>
</ul>


<p>fukui-no-MacBook-Air:sed ftakao2007$ sed '$d' test_sed.txt
aaa
bbb123</p>

<ul>
<li>最後の行を削除
```</li>
</ul>


<h3>q</h3>

<p>特定の文字列が含まれる行まで表示
``` bash
fukui-no-MacBook-Air:sed ftakao2007$ cat test_sed3.txt
aaa
bbbb123bbb456bbb
ccc
bbb789bbb</p>

<p>fukui-no-MacBook-Air:sed ftakao2007$ sed '/ccc/q' test_sed3.txt
aaa
bbbb123bbb456bbb
ccc</p>

<ul>
<li>cccが含まれる行まで表示
```</li>
</ul>


<h3>s</h3>

<p>置換する</p>

<p>``` bash
fukui-no-MacBook-Air:sed ftakao2007$ cat test_sed.txt
aaa
bbb123
ccc</p>

<p>fukui-no-MacBook-Air:sed ftakao2007$ sed 's/bbb/xxx/' test_sed.txt
aaa
xxx123
ccc</p>

<ul>
<li><p>bbbをxxxに置換
```</p></li>
<li><p>g
すべてのパターンに対して処理を実行する
``` bash
fukui-no-MacBook-Air:sed ftakao2007$ cat test_sed3.txt
aaa
bbb123bbb456bbb
ccc
bbb789bbb</p></li>
</ul>


<p>fukui-no-MacBook-Air:sed ftakao2007$ sed 's/bbb/xxx/' test_sed3.txt
aaa
xxx123bbb456bbb
ccc
xxx789bbb</p>

<ul>
<li>gオプションが無い場合は最初のみ置換される</li>
</ul>


<p>fukui-no-MacBook-Air:sed ftakao2007$ sed 's/bbb/xxx/g' test_sed3.txt
aaa
xxx123xxx456xxx
ccc
xxx789xxx</p>

<ul>
<li><p>gオプションをつけると全てが置換される
```</p></li>
<li><p>n(整数)
n番目の発生を置換
``` bash
fukui-no-MacBook-Air:sed ftakao2007$ cat test_sed3.txt
aaa
bbbb123bbb456bbb
ccc
bbb789bbb</p></li>
</ul>


<p>fukui-no-MacBook-Air:sed ftakao2007$ sed 's/bbb/ddd/1' test_sed3.txt
aaa
dddb123bbb456bbb
ccc
ddd789bbb</p>

<p>fukui-no-MacBook-Air:sed ftakao2007$ sed 's/bbb/ddd/2' test_sed3.txt
aaa
bbbb123ddd456bbb
ccc
bbb789ddd</p>

<p>fukui-no-MacBook-Air:sed ftakao2007$ sed 's/bbb/ddd/3' test_sed3.txt
aaa
bbbb123bbb456ddd
ccc
bbb789bbb
```</p>

<ul>
<li>p
パターンスペースの先頭セグメントから最初の復帰改行までを標準出力に出力する
``` bash
fukui-no-MacBook-Air:sed ftakao2007$ cat test_sed3.txt
aaa
bbbb123bbb456bbb
ccc
bbb789bbb</li>
</ul>


<p>fukui-no-MacBook-Air:sed ftakao2007$ sed -n 's/bbb/ddd/p1' test_sed3.txt
dddb123bbb456bbb
ddd789bbb</p>

<p>fukui-no-MacBook-Air:sed ftakao2007$ sed -n 's/bbb/ddd/p2' test_sed3.txt
bbbb123ddd456bbb
bbb789ddd</p>

<p>fukui-no-MacBook-Air:sed ftakao2007$ sed -n 's/bbb/ddd/p3' test_sed3.txt
bbbb123bbb456ddd
```</p>

<ul>
<li>w
ファイルへ書き出す
``` bash
fukui-no-MacBook-Air:sed ftakao2007$ cat test_sed3.txt
aaa
bbbb123bbb456bbb
ccc
bbb789bbb</li>
</ul>


<p>fukui-no-MacBook-Air:sed ftakao2007$ sed -n '/bbb/w bbb.txt     &lt;-ここで一度改行されている
/bbb/!w aaa.txt' test_sed3.txt</p>

<p>fukui-no-MacBook-Air:sed ftakao2007$ cat bbb.txt
bbbb123bbb456bbb
bbb789bbb</p>

<p>fukui-no-MacBook-Air:sed ftakao2007$ cat aaa.txt
aaa
ccc</p>

<ul>
<li>bbbにマッチした行をbbb.txtへ、マッチしなかった行をaaa.txtへ書き出す</li>
</ul>


<p>========================</p>

<p>fukui-no-MacBook-Air:sed ftakao2007$ cat test_sed3.txt
aaa
bbbb123bbb456bbb
ccc
bbb789bbb</p>

<p>fukui-no-MacBook-Air:sed ftakao2007$ sed 's/bbb/ddd/gw ddd.txt' test_sed3.txt > change.txt</p>

<p>fukui-no-MacBook-Air:sed ftakao2007$ cat ddd.txt
dddb123ddd456ddd
ddd789ddd</p>

<p>fukui-no-MacBook-Air:sed ftakao2007$ cat change.txt
aaa
dddb123ddd456ddd
ccc
ddd789ddd
fukui-no-MacBook-Air:sed ftakao2007$</p>

<ul>
<li>変換された行のみddd.txtに保存、変換後の全行をchange.txtに出力
```</li>
</ul>


<h2>Match</h2>

<h3>空行以外を出力</h3>

<p>``` bash
fukui-no-MacBook-Air:sed ftakao2007$ cat test_sed4.txt
aaa</p>

<p>bbbb123bbb456bbb
ccc</p>

<p> bbb789bbb</p>

<p>fukui-no-MacBook-Air:sed ftakao2007$ sed -n '/./p' test_sed4.txt
aaa
bbbb123bbb456bbb
ccc
 bbb789bbb</p>

<ul>
<li>空行以外の行を出力
```</li>
</ul>


<h3>空行を出力</h3>

<p>``` bash
fukui-no-MacBook-Air:sed ftakao2007$ cat test_sed4.txt
aaa</p>

<p>bbbb123bbb456bbb
ccc</p>

<p> bbb789bbb</p>

<p>fukui-no-MacBook-Air:sed ftakao2007$ sed -n '/<sup>$/p'</sup> test_sed4.txt</p>

<ul>
<li>空行を出力
(例は空行2行分が出力されている)
```</li>
</ul>


<h3>最初の空行から次の空行までを出力</h3>

<p>``` bash
fukui-no-MacBook-Air:sed ftakao2007$ cat test_sed4.txt
aaa</p>

<p>bbbb123bbb456bbb
ccc</p>

<p> bbb789bbb</p>

<p>fukui-no-MacBook-Air:sed ftakao2007$ sed -ne '/<sup>$/,/<sup>$/p'</sup></sup> test_sed4.txt</p>

<p>bbbb123bbb456bbb
ccc</p>

<ul>
<li>最初の空行から次の空行までが出力されている</li>
</ul>


<p>fukui-no-MacBook-Air:sed ftakao2007$ sed -ne '/<sup>$/,/<sup>$/p'</sup></sup> test_sed4.txt | sed -e '/<sup>$/d'</sup>
bbbb123bbb456bbb
ccc</p>

<ul>
<li>マッチした最初と最後の空行自体は削除して表示</li>
</ul>


<p>fukui-no-MacBook-Air:sed ftakao2007$ sed -ne '/<sup>$/,/<sup>$/p'</sup></sup> test_sed4.txt | sed -ne '/./p'
bbbb123bbb456bbb
ccc</p>

<ul>
<li>上と同じ結果
```</li>
</ul>


<h3>最初の空行から次の空行までの行を削除</h3>

<p>``` bash
fukui-no-MacBook-Air:sed ftakao2007$ cat test_sed4.txt
aaa</p>

<p>bbbb123bbb456bbb
ccc</p>

<p> bbb789bbb</p>

<p>fukui-no-MacBook-Air:sed ftakao2007$ sed -e '/<sup>$/,/<sup>$/d'</sup></sup> test_sed4.txt
aaa
 bbb789bbb
fukui-no-MacBook-Air:sed ftakao2007$
```</p>

<h2>Advance</h2>

<h3>正規表現(?)</h3>

<h4>&amp;</h4>

<p>置換のときに省略して記載できる</p>

<p>``` bash
fukui-no-MacBook-Air:sed ftakao2007$ cat test_sed.txt
aaa
bbb123
ccc</p>

<p>fukui-no-MacBook-Air:sed ftakao2007$ sed 's/bbb/bbb_add_/' test_sed.txt
aaa
bbb_add_123
ccc</p>

<ul>
<li>bbbの直後に<em>add</em>を追加する</li>
</ul>


<p>fukui-no-MacBook-Air:sed ftakao2007$ sed 's/bbb/&amp;<em>add</em>/' test_sed.txt
aaa
bbb_add_123
ccc</p>

<ul>
<li>先ほどと同じ結果。「bbb」のかわりに「&amp;」で指定
```</li>
</ul>


<h2>参考</h2>

<ul>
<li><a href="http://www.ksknet.net/linuxrz/sed.html">sed - ストリーミングエディタ</a></li>
<li><a href="http://www.ishilab.net/~ishihara/tips/sed.txt">sed に関するメモ</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git-command]]></title>
    <link href="http://ftakao2007.github.com/blog/2013/04/10/git-command/"/>
    <updated>2013-04-10T20:13:00+09:00</updated>
    <id>http://ftakao2007.github.com/blog/2013/04/10/git-command</id>
    <content type="html"><![CDATA[<h1>git init</h1>

<p>リポジトリの作成を行うコマンド</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[gitメモ]]></title>
    <link href="http://ftakao2007.github.com/blog/2013/04/07/git/"/>
    <updated>2013-04-07T22:57:00+09:00</updated>
    <id>http://ftakao2007.github.com/blog/2013/04/07/git</id>
    <content type="html"><![CDATA[<h1>メモ書き</h1>

<p>コンセプトは、曖昧に覚えていることをとりあえず書き出し、修正しながら身につける。</p>

<h2>リモートリポジトリ</h2>

<ul>
<li>gitサーバ側に作成されるリポジトリ。クライアント側から作成することはできない。</li>
<li>このリポジトリが無いとpushできない</li>
</ul>


<h2>master</h2>

<ul>
<li>masterのブランチ</li>
<li><code>git commit -m "hoge"</code> のように、commitを初めてした時に自動で作成される</li>
<li>ブランチは <code>git branch</code> で確認可能</li>
</ul>


<h2>origin</h2>

<ul>
<li>URLのエイリアスみたいなもの</li>
<li><code>git remote add origin https://github.com/ftakao2007/test.git</code> で後ろのURLが登録される</li>
<li>リポジトリごとに異なる</li>
<li>以下herokuの例
<code>bash
fukui-no-MacBook-Air:h ftakao2007$ git remote -v
heroku  git@heroku.com:quiet-tor-2376.git (fetch)
heroku  git@heroku.com:quiet-tor-2376.git (push)
origin  git://github.com/heroku/ruby-sample.git (fetch)
origin  git://github.com/heroku/ruby-sample.git (push)
</code></li>
</ul>


<h1>とりあえず手っ取り早くgitを使いたい</h1>

<h2>初期設定</h2>

<h3>まっさらなremoteリポジトリの場合</h3>

<p><code>bash
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/ftakao2007/test.git
git push -u origin master
</code></p>

<h3>いろいろ使われているremoteリポジトリをローカルに持ってきて使う場合</h3>

<p><code>bash
git clone https://github.com/ftakao2007/test.git
cd test
</code></p>

<h2>編集</h2>

<h3>リモートにプッシュ</h3>

<p><code>bash
vi munin_construct.py
git add munin_construct.py
git status
git commit -m 'Commit test'
git pull --rebase origin
git push origin
</code></p>

<h2>ブランチ</h2>

<h3>作成、確認、切り替え、コミット、プッシュ</h3>

<p>``` bash
fukui-no-MacBook-Air:test2 ftakao2007$ git branch
* master</p>

<p>fukui-no-MacBook-Air:test2 ftakao2007$ git branch test-branch</p>

<p>fukui-no-MacBook-Air:test2 ftakao2007$ git branch
* master
  test-branch</p>

<p>fukui-no-MacBook-Air:test2 ftakao2007$ git checkout test-branch
Switched to branch 'test-branch'</p>

<p>fukui-no-MacBook-Air:test2 ftakao2007$ git branch
  master
* test-branch</p>

<p>vi hoge.txt
git status
git add hoge.txt
git status
git commit -m "hoge"
git push -u origin test-branch
git checkout master
```</p>

<h2>削除</h2>

<h3>ローカルのブランチの削除</h3>

<p>``` bash
fukui-no-MacBook-Air:test2 ftakao2007$ git branch
* master
  test-branch</p>

<p>fukui-no-MacBook-Air:test2 ftakao2007$ git branch -D test-branch
Deleted branch test-branch (was 19b1e03).</p>

<p>fukui-no-MacBook-Air:test2 ftakao2007$ git branch
* master
```</p>

<h3>リモートのブランチ削除</h3>

<p>``` bash
fukui-no-MacBook-Air:test2 ftakao2007$ git branch -a
* master
  remotes/origin/HEAD -> origin/master
  remotes/origin/master
  remotes/origin/test-branch</p>

<p>fukui-no-MacBook-Air:test2 ftakao2007$ git push origin :test-branch     ※コロンをつける
Username:
Password:
To https://github.com/ftakao2007/test2.git
 - [deleted]         test-branch</p>

<p>fukui-no-MacBook-Air:test2 ftakao2007$ git branch -a
* master
  remotes/origin/HEAD -> origin/master
  remotes/origin/master
```</p>

<h3>コミットの取り消し</h3>

<p>``` bash
fukui-no-MacBook-Air:test2 ftakao2007$ git log
commit f56ca7da10d119fd91fb5f7d1c4799d94f525a91
Author: ftakao2007 <a href="&#109;&#97;&#105;&#x6c;&#116;&#111;&#58;&#x66;&#x74;&#97;&#x6b;&#97;&#111;&#x32;&#x30;&#48;&#x37;&#x40;&#103;&#x6d;&#x61;&#x69;&#108;&#46;&#99;&#x6f;&#109;">&#102;&#116;&#x61;&#107;&#97;&#x6f;&#50;&#x30;&#x30;&#x37;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#x63;&#x6f;&#109;</a>
Date:   Wed Apr 10 22:41:52 2013 +0900</p>

<pre><code>a
</code></pre>

<p>commit 3c63dc839b68e5753da4ab69330e465b31dd17c2
Author: ftakao2007 <a href="&#109;&#97;&#105;&#108;&#x74;&#x6f;&#58;&#x66;&#x74;&#x61;&#x6b;&#x61;&#x6f;&#x32;&#x30;&#x30;&#55;&#64;&#103;&#109;&#x61;&#105;&#108;&#x2e;&#99;&#111;&#x6d;">&#102;&#x74;&#x61;&#107;&#97;&#x6f;&#50;&#48;&#x30;&#x37;&#64;&#103;&#x6d;&#x61;&#105;&#108;&#46;&#x63;&#111;&#x6d;</a>
Date:   Wed Apr 10 22:37:36 2013 +0900</p>

<pre><code>hoge
</code></pre>

<p>fukui-no-MacBook-Air:test2 ftakao2007$ git reset --soft HEAD^</p>

<p>fukui-no-MacBook-Air:test2 ftakao2007$ git log
commit 3c63dc839b68e5753da4ab69330e465b31dd17c2
Author: ftakao2007 <a href="&#x6d;&#97;&#x69;&#x6c;&#x74;&#111;&#58;&#102;&#116;&#97;&#x6b;&#x61;&#111;&#50;&#x30;&#48;&#55;&#64;&#103;&#x6d;&#x61;&#105;&#x6c;&#46;&#x63;&#x6f;&#x6d;">&#x66;&#116;&#x61;&#107;&#97;&#x6f;&#x32;&#x30;&#48;&#x37;&#x40;&#103;&#109;&#97;&#x69;&#x6c;&#46;&#99;&#111;&#109;</a>
Date:   Wed Apr 10 22:37:36 2013 +0900</p>

<pre><code>hoge
</code></pre>

<p><code>``
</code>git reset --hard HEAD<sup>`</sup> にすると、コミットの取り消しと同時にファイルの内容もコミット前に戻る。</p>

<h2>今後確認すること</h2>

<ul>
<li>リビジョンてどうなってるの？ぱっとググった感じリビジョンて概念を使わない？世代を超えたファイルのdiffってできないのかな。</li>
<li>Webでdiffしたら文字化けしてる？</li>
</ul>


<h2>リンク</h2>

<p><a href="http://lealog.hateblo.jp/entry/2012/12/22/023547">最低限の知識でGitの運用をする</a></p>

<h1>README.md</h1>

<p><a href="http://kuroigamen.com/13">gituhub に自分のプロジェクトのリポジトリを作ってみる。</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[command]]></title>
    <link href="http://ftakao2007.github.com/blog/2013/04/07/command/"/>
    <updated>2013-04-07T20:16:00+09:00</updated>
    <id>http://ftakao2007.github.com/blog/2013/04/07/command</id>
    <content type="html"><![CDATA[<h1>ssh-keygen</h1>

<ul>
<li><a href="http://d.hatena.ne.jp/tmd45/20110203/1296744114">ローカル（Windows, cygwin）からGithubのリポジトリにpushするメモ</a></li>
<li><a href="http://d.hatena.ne.jp/MIZUNO/20080705/1215238138">複数の公開鍵を使い分ける</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
