<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: aws | Octopress Blog]]></title>
  <link href="http://ftakao2007.github.com/blog/categories/aws/atom.xml" rel="self"/>
  <link href="http://ftakao2007.github.com/"/>
  <updated>2013-05-11T14:21:57+09:00</updated>
  <id>http://ftakao2007.github.com/</id>
  <author>
    <name><![CDATA[ftakao2007]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ec2-api-tools]]></title>
    <link href="http://ftakao2007.github.com/blog/2013/04/15/ec2-api-tools/"/>
    <updated>2013-04-15T19:45:00+09:00</updated>
    <id>http://ftakao2007.github.com/blog/2013/04/15/ec2-api-tools</id>
    <content type="html"><![CDATA[<h1 id="初期設定">初期設定</h1>

<ul>
<li><p><a href="http://engineer.blog.lancers.jp/2012/12/ec2-api-tools/">AWSのEC2 API Toolsをインストールなしで利用する方法</a><br/>
➡基本的にこの設定でOK。
AWSのログインとかがあるメニューから証明書取得の画面を開き、証明書と秘密鍵を取得する。</p></li>
<li><p>2013/03/31<br/>
こちらのアクセスキーとシークレットキーでアクセスする方法に変更<br/>
<a href="http://blog.serverworks.co.jp/tech/2013/03/29/accesskeyid_secretkey_on_ec2-api-tools/">EC2 API ToolsでアクセスキーIDとシークレットアクセスキーを使う</a></p></li>
</ul>


<p>``` bash</p>

<h1 id="cp+pk-xxxxxxxxxxxx.pem+/opt/aws/apitools/ec2/">cp pk-xxxxxxxxxxxx.pem /opt/aws/apitools/ec2/</h1>

<h1 id="cp+cert-xxxxxxxxxxxx.pem+/opt/aws/apitools/ec2/">cp cert-xxxxxxxxxxxx.pem /opt/aws/apitools/ec2/</h1>

<p>vi ~/.bashrc</p>

<p>export EC2_HOME=/opt/aws/apitools/ec2
export PATH=$PATH:$EC2_HOME/bin</p>

<h1 id="export+EC2_PRIVATE_KEY=$EC2_HOME/pk-xxxxxxxxxxxx.pem">export EC2_PRIVATE_KEY=$EC2_HOME/pk-xxxxxxxxxxxx.pem</h1>

<h1 id="export+EC2_CERT=$EC2_HOME/cert-xxxxxxxxxxxx.pem">export EC2_CERT=$EC2_HOME/cert-xxxxxxxxxxxx.pem</h1>

<p>export AWS_ACCESS_KEY=xxxxxxxxxxxxxxxxxxec2-api-tools
export AWS_SECRET_KEY=yyyyyyyyyyyyyyyyyyyyyyyyyyy
export EC2_URL=http://ec2.ap-northeast-1.amazonaws.com
```</p>

<h1 id="諸情報">諸情報</h1>

<h2 id="実行ファイルのPATH">実行ファイルのPATH</h2>

<p>/opt/aws/bin</p>

<h2 id="環境変数">環境変数</h2>

<h3 id="EC2_HOME">EC2_HOME</h3>

<p>ec2-api-toolsのHOME
* 例<br/>
export EC2_HOME=/opt/aws/apitools/ec2</p>

<h3 id="EC2_PRIVATE_KEY">EC2_PRIVATE_KEY</h3>

<p>秘密鍵のPATH。今は使ってない</p>

<ul>
<li>例<br/>
export EC2_PRIVATE_KEY=$EC2_HOME/pk-XXXXXXXXXXXXXXXXXXXXX.pem</li>
</ul>


<h3 id="EC2_CERT">EC2_CERT</h3>

<p>証明書のPATH。今は使ってない。</p>

<ul>
<li>例<br/>
export EC2_CERT=$EC2_HOME/cert-XXXXXXXXXXXXXXXXXXXXXXX.pem</li>
</ul>


<h3 id="AWS_ACCESS_KEY">AWS_ACCESS_KEY</h3>

<p>AWSアクセスキー</p>

<ul>
<li>例<br/>
export AWS_ACCESS_KEY=xxxxxxxxxxxxxxxxxx</li>
</ul>


<h3 id="AWS_SECRET_KEY">AWS_SECRET_KEY</h3>

<p>AWSシークレットキー</p>

<ul>
<li>例<br/>
export AWS_SECRET_KEY=yyyyyyyyyyyyyyyyyyyyyyyyyyy</li>
</ul>


<h3 id="EC2_URL">EC2_URL</h3>

<p>リージョンの指定</p>

<ul>
<li>例<br/>
export EC2_URL=http://ec2.ap-northeast-1.amazonaws.com</li>
</ul>


<h1 id="コマンド">コマンド</h1>

<h2 id="確認">確認</h2>

<h3 id="ec2ver">ec2ver</h3>

<p>バージョンの表示
<code>bash
[ec2-user@ip-10-146-39-194 ~]$ ec2ver
1.6.6.0 2012-12-01
</code></p>

<h3 id="ec2-describe-images">ec2-describe-images</h3>

<p>AMIの表示</p>

<p>``` bash
[ec2-user@ip-10-146-39-194 ~]$  ec2-describe-images -x all
IMAGE   ami-1fd85d1e    001108612011/CentOS-63-40T-EBS-PhilChen 001108612011    available       public          x86_64  machine aki-44992845                    ebs     paravirtual     xen
BLOCKDEVICEMAPPING      EBS     /dev/sda1               snap-af93b78f   40      true    standard
IMAGE   ami-e802b5e9    014836023992/ProxySnifferGUI-46-Z-win64-04      014836023992    available       public          x86_64  machine                 windows ebs     hvm     xen
BLOCKDEVICEMAPPING      EBS     /dev/sda1               snap-339edc59   35      true    standard
IMAGE   ami-a4ea50a5    014836023992/ProxySnifferGUI-50-K-win64-03      014836023992    available       public          x86_64  machine                 windows ebs     hvm     xen
BLOCKDEVICEMAPPING      EBS     /dev/sda1               snap-9b2e46bb   35      true    standard
...</p>

<p>※AMIの一覧が表示される
```</p>

<h2 id="インスタンス操作関連">インスタンス操作関連</h2>

<h3 id="ec2-describe-instances">ec2-describe-instances</h3>

<p>インスタンスの一覧の情報が表示される</p>

<p>``` bash
RESERVATION r-a16fc3a2  492323174246    magento_sg
INSTANCE    i-1f433f1c  ami-87932986            stopped magento_key 0       t1.micro    2013-01-06T00:53:08+0000    ap-northeast-1a aki-44992845            monitoring-disabled                 ebs     paravirtual xen hXdxF1357433587195  sg-17a3c816 default false <br/>
BLOCKDEVICE /dev/sdf    vol-5bb81c79    2013-02-11T07:14:32.000Z    false     <br/>
TAG instance    i-1f433f1c  Name    magento_amazon</p>

<p>RESERVATION r-9dfb469e  492323174246    nfs_test_sg,stg_sg
INSTANCE    i-7b470978  ami-4e6cd34f    ec2-54-249-240-55.ap-northeast-1.compute.amazonaws.com  ip-10-146-39-194.ap-northeast-1.compute.internal    running wordpress_key   0       t1.micro    2013-01-19T23:50:01+0000    ap-northeast-1b aki-44992845            monitoring-disabled 54.249.240.55   10.146.39.194           ebs                 paravirtual xen xuoXb1358639400459  sg-86076187, sg-3f58323e    default false <br/>
BLOCKDEVICE /dev/sda1   vol-42cf7b60    2013-01-19T23:50:05.000Z    true      <br/>
TAG instance    i-7b470978  Name    Redmine
```</p>

<p>※ 引数にインスタンスIDを指定数と、そのインスタンスの情報のみ表示される</p>

<h3 id="ec2-start-instances">ec2-start-instances</h3>

<p>インスタンスを起動
``` bash
[ec2-user@ip-10-146-39-194 ~]$ ec2-start-instances --region ap-northeast-1 i-1f433f1c
INSTANCE    i-1f433f1c  stopped pending</p>

<p>[ec2-user@ip-10-146-39-194 ~]$ ec2-describe-instance-status
INSTANCE    i-1f433f1c  ap-northeast-1a running 16  ok  ok  active<br/>
SYSTEMSTATUS    reachability    passed<br/>
INSTANCESTATUS  reachability    passed<br/>
INSTANCE    i-7b470978  ap-northeast-1b running 16  ok  ok  active<br/>
SYSTEMSTATUS    reachability    passed<br/>
INSTANCESTATUS  reachability    passed
```</p>

<h3 id="ec2-stop-instances">ec2-stop-instances</h3>

<p>インスタンスを停止
``` bash
[ec2-user@ip-10-146-39-194 ~]$ ec2-stop-instances i-1f433f1c
INSTANCE    i-1f433f1c  running stopping</p>

<p>[ec2-user@ip-10-146-39-194 ~]$ ec2-describe-instances
RESERVATION r-a16fc3a2  492323174246    magento_sg
INSTANCE    i-1f433f1c  ami-87932986            stopped magento_key 0       t1.micro    2013-02-20T15:34:21+0000    ap-northeast-1a aki-44992845            monitoring-disabled                 ebs     paravirtual xen hXdxF1357433587195  sg-17a3c816 default false <br/>
BLOCKDEVICE /dev/sda1   vol-5bb81c79    2013-02-20T15:34:02.000Z    false     <br/>
TAG instance    i-1f433f1c  Name    magento_amazon</p>

<p>➡ stoppedになっている</p>

<p>RESERVATION r-9dfb469e  492323174246    nfs_test_sg,stg_sg
INSTANCE    i-7b470978  ami-4e6cd34f    ec2-54-249-240-55.ap-northeast-1.compute.amazonaws.com  ip-10-146-39-194.ap-northeast-1.compute.internal    running wordpress_key   0       t1.micro    2013-01-19T23:50:01+0000    ap-northeast-1b aki-44992845            monitoring-disabled 54.249.240.55   10.146.39.194           ebs                 paravirtual xen xuoXb1358639400459  sg-86076187, sg-3f58323e    default false <br/>
BLOCKDEVICE /dev/sda1   vol-42cf7b60    2013-01-19T23:50:05.000Z    true      <br/>
TAG instance    i-7b470978  Name    Redmine
```</p>

<p>起動しているインスタンスのみ確認する場合は以下</p>

<p>``` bash
[ec2-user@ip-10-146-39-194 ~]$ ec2-stop-instances i-1f433f1c
INSTANCE    i-1f433f1c  running stopping</p>

<p>[ec2-user@ip-10-146-39-194 ~]$ ec2-describe-instance-status
INSTANCE    i-7b470978  ap-northeast-1b running 16  ok  ok  active<br/>
SYSTEMSTATUS    reachability    passed<br/>
INSTANCESTATUS  reachability    passed</p>

<p>※ i-1f433f1cが表示されなくなっている
```</p>

<h2 id="snapshot関連">snapshot関連</h2>

<h3 id="ec2-describe-snapshots">ec2-describe-snapshots</h3>

<p>snapshot一覧の表示
<code>bash
[ec2-user@ip-10-157-54-96 bin]$ ec2-describe-snapshots --region ap-northeast-1
SNAPSHOT    snap-a22a9d81   vol-42cf7b60    completed   2013-03-03T07:55:57+0000    100%    492323174246    8   Redmine
TAG snapshot    snap-a22a9d81   Name    Redmine
SNAPSHOT    snap-f363ddd0   vol-42cf7b60    completed   2013-03-05T22:55:59+0000    100%    492323174246    8   Redmine 20130306
TAG snapshot    snap-f363ddd0   Name    Redmine
</code></p>

<h3 id="ec2-copy-snapshot">ec2-copy-snapshot</h3>

<p>snapshotのコピー
<code>bash
ec2-copy-snapshot --region ap-southeast-1 -r ap-northeast-1 -s snap-a22a9d81
</code>
※東京からシンガポールのリージョンへコピー</p>

<h3 id="ec2-describe-snapshot">ec2-describe-snapshot</h3>

<p>snapshotのアクセス権限確認
<code>bash
[ec2-user@ip-10-157-54-96 bin]$ ec2-describe-snapshot-attribute snap-a22a9d81 --create-volume-permission
[ec2-user@ip-10-157-54-96 bin]$
</code>
権限が設定されていない場合(非公開設定)は何も出力されない</p>

<h3 id="ec2-modify-snapshot-attribute">ec2-modify-snapshot-attribute</h3>

<p>snapshotのアクセス権限を変更する
<code>bash
ec2-modify-snapshot-attribute (snap_id) -c --add all
</code>
※すべてのユーザに公開される設定</p>

<h3 id="ec2-reset-snapshot-attribute">ec2-reset-snapshot-attribute</h3>

<p>権限をリセットする
<code>bash
ec2-reset-snapshot-attribute (snapshot_id) -c
</code></p>

<h2 id="volume関連">volume関連</h2>

<h3 id="ec2-detach-volume">ec2-detach-volume</h3>

<p>ボリュームをデタッチする</p>

<p><code>bash
[ec2-user@ip-10-156-119-74 ~]$ ec2-detach-volume vol-5bb81c79
ATTACHMENT  vol-5bb81c79    i-1f433f1c  /dev/sda1   detaching   2013-03-26T14:50:06+0000
</code></p>

<h3 id="ec2-attach-volume">ec2-attach-volume</h3>

<p>ボリュームをアタッチする</p>

<p><code>bash
[ec2-user@ip-10-156-119-74 ~]$ ec2-attach-volume vol-5bb81c79 -i i-1f433f1c -d /dev/sda1
ATTACHMENT  vol-5bb81c79    i-1f433f1c  /dev/sda1   attaching   2013-03-31T14:55:34+0000
</code></p>

<h3 id="ec2-create-volume">ec2-create-volume</h3>

<p>ボリュームを作成する</p>

<p><code>bash
[ec2-user@ip-10-156-119-74 ~]$ ec2-create-volume --snapshot snap-7971395a -z ap-northeast-1a
VOLUME  vol-45531e67    8   snap-7971395a   ap-northeast-1a creating    2013-03-31T15:02:11+0000    standard
</code></p>

<h2 id="Elastic+IP関連">Elastic IP関連</h2>

<h3 id="ec2-describe-addresses">ec2-describe-addresses</h3>

<p><code>bash
[ec2-user@ip-10-158-203-131 tmp]$ ec2-describe-addresses
ADDRESS 54.249.240.55   i-7b470978  standard
</code></p>

<h1 id="トラブルシューティング">トラブルシューティング</h1>

<p><a href="https://forums.aws.amazon.com/message.jspa?messageID=342081">Instance does not have a volume attached at root (/dev/sda1)</a></p>

<p>/dev/sdfになっていたのを/dev/sda1でアタッチし直したらOK</p>

<h1 id="リンク">リンク</h1>

<ul>
<li><a href="http://d.hatena.ne.jp/studio-m/20091104/1257297074">CentOSでec2-api-tools, ec2-ami-toolsを使えるようにする</a></li>
<li><a href="http://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference/command-reference.html">API Tools Reference</a></li>
<li><a href="http://nkjmkzk.net/?p=1814">EC2においてEBS Snapshotでバックアップを取得しそれをリカバリする方法</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ec2-windows]]></title>
    <link href="http://ftakao2007.github.com/blog/2013/04/10/ec2-windows/"/>
    <updated>2013-04-10T00:13:00+09:00</updated>
    <id>http://ftakao2007.github.com/blog/2013/04/10/ec2-windows</id>
    <content type="html"><![CDATA[<h1 id="iPad(iSSH)でec2のWindowsインスタンスにリモートデスクトップで接続">iPad(iSSH)でec2のWindowsインスタンスにリモートデスクトップで接続</h1>

<p><img src="https://dl.dropbox.com/u/37468049/ec2_windows01.jpg" alt="Windows接続の図" /></p>

<p>わぁい</p>

<h1 id="設定方法">設定方法</h1>

<h2 id="EC2設定">EC2設定</h2>

<p><a href="http://www.amodova.com/jp/blog/article/azec202.html">AmazonEC2でリモートデスクトップ:接続編</a></p>

<p>ec2側の設定は上記のサイト通り進めれば問題ないです。</p>

<h2 id="iPad側設定">iPad側設定</h2>

<p>iSSHという有償のソフトを使って接続しました。<br/>
設定は以下の様な感じ。</p>

<p><img src="https://dl.dropbox.com/u/37468049/ec2_windows02.jpg" alt="Windows接続の図" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ec2]]></title>
    <link href="http://ftakao2007.github.com/blog/2013/04/07/ec2/"/>
    <updated>2013-04-07T10:36:00+09:00</updated>
    <id>http://ftakao2007.github.com/blog/2013/04/07/ec2</id>
    <content type="html"><![CDATA[<p>ec2関連のまとめ</p>

<h1 id="EC2にDropboxをインストールしてOctopressの記事を共有する">EC2にDropboxをインストールしてOctopressの記事を共有する</h1>

<p>※※※ Dropbox上のファイルが消失する可能性のある作業が含まれますので以下作業をする場合は自己責任でお願いしますm(<em> </em>)m</p>

<h2 id="概要">概要</h2>

<p>Octopressの記事はローカルに保存して編集するので、通常その環境でしか作業できない。
DropboxにOctopressの記事を置くことで、様々な環境で記事を編集できるようにする。</p>

<h2 id="[CUI環境の+Linux+に+Dropbox+をインストール](http://d.hatena.ne.jp/tester7/20120303/1330768342)"><a href="http://d.hatena.ne.jp/tester7/20120303/1330768342">CUI環境の Linux に Dropbox をインストール</a></h2>

<p>基本的にこの手順にそって作業すればOK<br/>
(今回の環境はAmazonLinux 64bit)</p>

<h2 id="ポイントなど">ポイントなど</h2>

<ul>
<li><p>DLと展開が一度にできなかったので分けて実施
<code>bash
wget http://www.dropbox.com/download?plat=lnx.x86_64
tar zxvf dropbox-lnx.x86_64-2.0.5.tar.gz
</code></p></li>
<li><p>同期の状態はfilestatusとstatusで確認
``` bash
[root@ip-10-156-85-183 Dropbox]# dropbox filestatus
Photos:          syncing
private:         syncing
Public:          up to date
カメラアップロード:       up to date</p></li>
</ul>


<p>[root@ip-10-156-85-183 ~]# dropbox status
更新中（4,174 件のファイル, 残り 1 時間）
4,174 件のファイルをダウンロード中 （162.8 kB/秒、残り 1 時間
```</p>

<ul>
<li>同期対象から除外と確認
``` bash
[root@ip-10-156-85-183 ~]# dropbox exclude add ~/Dropbox/カメラアップロード
Excluded:
Dropbox/カメラアップロード</li>
</ul>


<p>[root@ip-10-156-85-183 ~]# dropbox exclude list
Excluded:
Dropbox/カメラアップロード
```</p>

<h2 id="気をつけたほうが良いこと">気をつけたほうが良いこと</h2>

<p>Dropboxを起動すると即同期がはじまります。デフォルトではDropboxのすべてのファイル
同期が始まるのですが、ここで焦ってファイルを削除すると必要なDropbox上の大元のファイルを削除してしまう可能性があります。
rmなどで直接削除せず、exclude addを実行してください(コマンド実行後、反映されるまで1分くらいかかることがあります)。
実行が完了すると対象ファイルは見えなくなります。</p>

<p>あと、普段は停止して必要な時のみ同期させてリソースを節約したほうがよいかもです。</p>

<h1 id="Octopressの環境を構築">Octopressの環境を構築</h1>

<h3 id="初期設定">初期設定</h3>

<ul>
<li><a href="http://k-ui.jp/blog/2011/08/30/try-to-octopress/">Octopress 使う</a></li>
<li><a href="http://atijust.github.io/">GitHub+Octopressでブログ構築</a></li>
</ul>


<h4 id="rvmとruby1.9.3のインストール">rvmとruby1.9.3のインストール</h4>

<p><code>bash
bash -s stable &lt; &lt;(curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer)
source ~/.bash_profile
rvm autolibs enable
rvm install ruby-1.9.3-p392 &amp;&amp; rvm use ruby-1.9.3-p392
rvm rubygems latest
</code></p>

<p>※ 参考のページはruby-1.9.2-p320で、現在はoctpressフォルダに移動したときに<code>ruby-1.9.3-p392 is not installed.</code>のメッセージが出てしまう。<br/>
※ <code>rvm rubygems latest</code>は実行しなくてもよいかも。(直前のコマンドで実行されている?)<br/>
※ CentOS6.4は<a href="http://d.hatena.ne.jp/watanabe162/20120424/1335273582">libyaml-develをインストール</a>しないとエラーになる。<br/>
デフォルトのリポジトリには入っていないので、EPELリポジトリを追加する必要がある。<br/>
※ CentOS6.4はsudoが実行できる設定も行う必要がある。</p>

<h4 id="必要なパッケージのインストール">必要なパッケージのインストール</h4>

<p><code>bash
gem install bundler rake
bundle install
rake install  
</code>
※ DropBox内に既存の設定がある場合は<code>rake install</code>は実行不要</p>

<h4 id="githubの設定">githubの設定</h4>

<p><code>bash
rake setup_github_pages
</code></p>

<p><code>bash
git config --global user.name "Your Name"
git config --global user.email you@example.com
git commit --amend --reset-author
</code>
※  この辺はエラーメッセージに実行してくださいと出たので設定しました。最後の行は実行しなくてもよいかもです。</p>

<h4 id="githubのアクセス設定">githubのアクセス設定</h4>

<p>接続しようとすると<code>fatal: The remote end hung up unexpectedly</code>のエラーがでるのでsshの権限を設定する</p>

<p><a href="http://d.hatena.ne.jp/tmd45/20110203/1296744114">githubにパスワードなしでssh接続する設定</a> で鍵を事前に作っていた。これ(id_rsa)を<code>~/.ssh</code>に移動。600への権限変更も忘れずに。<br/>
※ 既存の鍵を上書きしないように注意。</p>

<p>これでgithubに上げられるようになる。<br/>
<a href="http://ftakao2007.github.io/blog/2013/04/06/octpress/">Octopress まとめ</a></p>

<h2 id="リンク">リンク</h2>

<ul>
<li><a href="http://d.hatena.ne.jp/okachimachiorz/touch/20130414/1365914031">「オンプレミス・システムの終わり」の始まり～AWSでのミッションクリティカルシステムの稼働29</a></li>
<li><a href="http://recipe.kc-cloud.jp/archives/628">AWS SDK Rubyを使ってみよう！</a></li>
<li><a href="http://blog.livedoor.jp/morituri/tag/ec2-register">コマンドラインツールでEBSインスタンスからAMIを作成する【Amazon EC2】</a></li>
<li><a href="http://blog.serverworks.co.jp/tech/2012/02/23/">インスタンスストアタイプからEBSタイプのAMI作成 Ubuntu編</a></li>
<li><a href="http://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference/Welcome.html">Amazon Elastic Compute Cloud Command Line Reference</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
